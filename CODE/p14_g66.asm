.MODEL TINY
.DATA
MASTER_PASSWORD 	DB  	0EDH, 0EBH, 0E7H, 0DEH, 0DDH, 0DBH, 0D7H, 0BEH, 0EDH, 0EBH, 0E7H, 0DEH, 0DDH, 0DBH, 0D7H, 0BEH
;          			   1,	2,   3,     4,	  5,	6     7     8      1    2    3      4     5     6     7     8

USER_PASSWORD 		DB 	0EDH, 0EBH, 0E7H, 0DEH, 0DDH, 0DBH, 0EDH, 0EBH, 0E7H, 0DEH, 0DDH, 0DBH
;					password=123456123456

ALARM_PASSWORD 		DB  	0EDH,0EBH,0E7H,0DEH,0DDH,0DBH,0D7H,0EDH,0EBH,0E7H,0DEH,0DDH,0DBH,0D7H
;					password=12345671234567

USER_TEMP DB 13 DUP(0)
MASTER_TEMP DB 17 DUP(0)
ALARM_TEMP DB 15 DUP(0)


TABLE 		DB 		77H, 7BH, 7DH, 7EH, 0B7H, 0BBH, 0BDH, 0BEH, 0D7H, 0DBH, 0DDH, 0DEH, 0E7H, 0EBH, 0EDH, 0EEH
				;enter AC   C	A     O	   M	 9     8     7     6     5     4     3     2      1     0
PORTA EQU 00H
PORTB EQU 02H
PORTC EQU 04H        ;		8255 
CREG EQU 06H

;assigning port addresses 8255-2 for lcd
porta2 equ 08H
portb2 equ 0aH
portc2 equ 0CH
command_address equ 0EH


STACK1 DW 100 DUP(?)
TOP_STACK1 LABEL WORD

.CODE
.STARTUP

	MOV AX,0010H
	MOV DS,AX
	MOV AX,0810H
	MOV SS,AX

	MOV AL,10011000B	  ;INITIALIZE first 8255 with PORT A(PUSH BUTTON) and upper PORT C as inputs
	OUT CREG,AL			; PORT B and LOWER PORT C as outputs.
	CALL DELAY_20MS
	MOV AL,00000000B
	OUT PORTB,AL
	CALL DELAY_20MS
	
	;MOV AL,10000000B
	;OUT command_address,AL
	CALL DELAY_20MS
	


    ; initialise hardware
	; initialise the lcd
	; check for busy status
	; clear the screen
	; display 'empty'
	;call init_motor
	
	
	;writing on the command register for initialization
	
	CALL LCD_INIT ;calling lcd initialization

	


	
X9:	CALL KEYPAD
	CMP AL,0BBH		;CHECKING IF 'M' KEY IS PRESSED
	JNZ X6
	CALL MASTER
	JMP X8 ;mchange x8?
	
X6:	CMP AL,0B7H		;CHECKING IF 'O' KEY IS PRESSED
	JNZ X7
	CALL USER
	JMP X8 ;mchange x8?
	
X7: 	CMP AL,7EH		;CHECKING IF 'A' KEY IS PRESSED
	JNZ X8
	CALL ALARM		;mchange call alarm
	JMP X9
		
X8:	IN AL,PORTA	;CHECKING IF PUSH BUTTON IN ROOM IS PRESSED
	AND AL,01H
	CMP AL,01H
	JNZ X9
	CALL DELAY_20MS		;De Bounce Key press
	IN AL,PORTA		
	AND AL,01H
	CMP AL,01H	
	JNZ X9
	CALL DOOR
	JMP X9 ;loop
.EXIT

PASS_UPDATE PROC NEAR			;PROCEDURE FOR UPDATING PASSWORD
PUSHF
PUSH BX
PUSH CX
PUSH DX

	LEA DI,USER_PASSWORD
	MOV CX,0
	
X17:	CALL KEYPAD
	CMP AL,7DH			;CHECKING FOR 'C' KEY
	JZ X18
	JMP X19

X18:	CMP CX,0
	JZ X17
	DEC DI
	DEC CX
	CALL BACKSPACE			;DELETING A SINGLE CHARACTER
	JMP X17
	
X19:	CMP AL,7BH			;CHECKING FOR 'AC' KEY
	JNZ X20
	CALL CLS			;DELETING ENTIRE DISPLAY
	LEA DI,USER_PASSWORD
	MOV CX,0
	JMP X17

X20:	CMP AL,7EH                     ;'A' key ignored
	JZ X17
	CMP AL,0B7H			;'O' key ignored 
	JZ X17
	CMP AL,0BBH			;'M' key ignored
	JZ X17
	CMP AL,77H			;'enter key ignored'
	JZ X17

	CLD
	STOSB
	CALL ASTWRIT
	INC CX				;takes new password
	CMP CX,12
	JNZ X17

CALL CLS
POP DX        				; RESTORE CALLING PROGRAM REGISTERS
POP CX
POP BX
POPF
RET
PASS_UPDATE	ENDP


MASTER PROC NEAR			;PROCEDURE FOR MASTER MODE
PUSHF
PUSH BX
PUSH CX
PUSH DX
CALL CLS

	MOV AL,00000001B		;Enter Password LED glows
	OUT PORTB,AL
	LEA SI,MASTER_PASSWORD
	LEA DI,MASTER_TEMP
	MOV CX,0
	
X10:	CALL KEYPAD
	mov al,00000000b
	out portb,al			;????????????????
	CMP AL,7DH			;CHECKING FOR 'C' KEY
	JZ X11
	JMP X12

X11:	CMP CX,0
	JZ X10
	DEC DI
	CALL BACKSPACE
	DEC CX
	JMP X10
	
X12:	CMP AL,7BH			;CHECKING FOR 'AC' KEY
	JNZ X13
	LEA DI,MASTER_TEMP
	CALL CLS
	MOV CX,0
	JMP X10

X13:	CMP AL,7EH			;'A' key ignored
	JZ X10
	CMP AL,0B7H                     ;'O' key ignored
	JZ X10
	CMP AL,0BBH			;'M' key ignored
	JZ X10
	CMP AL,77H			;IF 'ENTER' IS PRESSED
	JZ X14
	MOV [DI],AL
	CALL ASTWRIT
	INC DI
	INC CX
	CMP CX,11H
	JNZ X10
	DEC CX
	JMP X10

X14:	CMP CX,10H			;10h=16
	JZ X15
	CALL ALARM
	JMP L2				;JUMP TO EXIT

X15:	LEA DI,MASTER_TEMP
	MOV CX,16
	CLD
REPE	CMPSB
	CMP CX,0
	JZ X16
	CALL ALARM
	JMP L2				;JUMP TO EXIT

X16:	MOV AL,00000010B
	OUT PORTB,AL			;Update/RESET LED glows
	CALL PASS_UPDATE
	MOV AL,00000100B		;PASSWORD UPDATED LED glows
	OUT PORTB,AL
					
L2:
POP DX        				; RESTORE CALLING PROGRAM REGISTERS
POP CX
POP BX
POPF
RET
MASTER	ENDP


DOOR		PROC NEAR		;PROCEDURE FOR OPENING DOOR		
PUSHF 
PUSH BX
PUSH CX
PUSH DX		
		MOV AL,00010000B
		OUT PORTB,AL

		MOV CX,250				
X36:		CALL DELAY_20MS
		LOOP X36
		
		MOV AL,00000000B
		OUT PORTB,AL

		MOV CX,3000
X37:		CALL DELAY_20MS
		LOOP X37

		MOV AL,00100000B
		OUT PORTB,AL
		
		MOV CX,250
X38:		CALL DELAY_20MS
		LOOP X38
		
		MOV AL,00000000B
		OUT PORTB,AL

POP DX        				; RESTORE CALLING PROGRAM REGISTERS
POP CX
POP BX
POPF
RET
DOOR		ENDP



DELAY_20MS	PROC NEAR		;INTRODUCES A DELAY OF 20MS
		MOV CX,5462
L1:		DEC CX
		JNZ L1
		RET
DELAY_20MS	ENDP



KEYPAD PROC NEAR
PUSHF
PUSH BX
PUSH CX
PUSH DX

X0:	MOV AL,00H		;CHECK FOR KEY RELEASE-TWO KEY LOCKOUT
	OUT PORTC,AL
	CALL DELAY_20MS
X1:	IN AL,PORTC
	CALL DELAY_20MS
	AND AL,0F0H
	CMP AL,0F0H
	JNZ X1

	CALL DELAY_20MS		;DEBOUNCE KEY PRESS
	MOV AL,00H		;KEYPRESS CHECK
	OUT PORTC,AL
X2:	IN AL,PORTC
	AND AL,0F0H
	CMP AL,0F0H
	JZ X2
	CALL DELAY_20MS
	MOV AL,00H		;AGAIN CHECK FOR KEYPRESS
	OUT PORTC,AL
	IN AL,PORTC
	AND AL,0F0H
	CMP AL,0F0H
	JZ X2

	MOV AL,0EH		;CHECK FOR KEYPRESS COLUMN 1
	MOV BL,AL
	OUT PORTC,AL
	IN AL,PORTC
	AND AL,0F0H
	CMP AL,0F0H
	JNZ X3

	MOV AL,0DH		;CHECK FOR KEYPRESS COLUMN 2
	MOV BL,AL
	OUT PORTC,AL
	IN AL,PORTC
	AND AL,0F0H
	CMP AL,0F0H
	JNZ X3

	MOV AL,0BH		;CHECK FOR KEYPRESS COLUMN 3
	MOV BL,AL
	OUT PORTC,AL
	IN AL,PORTC
	AND AL,0F0H
	CMP AL,0F0H
	JNZ X3

	MOV AL,07H		;CHECK FOR KEYPRESS COLUMN 4
	MOV BL,AL
	OUT PORTC,AL
	IN AL,PORTC
	AND AL,0F0H
	CMP AL,0F0H
	JZ X2

X3:	OR AL,BL	 
	MOV CX,0FH
	MOV DI,00H
X4:	CMP AL,TABLE[DI]
	JZ X5
	INC DI
	LOOP X4
	
X5:	
	POP DX     		; RESTORE CALLING PROGRAM REGISTERS
	POP CX
	POP BX
	POPF
	RET
KEYPAD	ENDP



ALARM PROC NEAR			;PROCEDURE FOR ALARM MODE
PUSHF
PUSH BX
PUSH CX
PUSH DX
CALL CLS

	MOV AL,00001001B		;to glow enter password led and keep the buzzer on????????????
	OUT PORTB,AL
	MOV CX,0
	LEA SI,ALARM_PASSWORD
	LEA DI,ALARM_TEMP

X21:	CALL KEYPAD
	CMP AL,7DH			;CHECKING FOR 'C' KEY
	JZ X22
	JMP X23

X22:	CMP CX,0
	JZ X21
	DEC DI
	CALL BACKSPACE
	DEC CX
	JMP X21
	
X23:	CMP AL,7BH			;CHECKING FOR 'AC' KEY
	JNZ X24
	LEA DI,ALARM_TEMP
	MOV CX,0
	JMP X21

X24:	CMP AL,7EH			;'A' key ignored
	JZ X21
	CMP AL,0B7H			;'O' key ignored
	JZ X21
	CMP AL,0BBH			;'M' key ignored
	JZ X21
	CMP AL,77H			;IF 'ENTER' IS PRESSED
	JZ X25
	MOV [DI],AL
	INC DI
	CALL ASTWRIT
	INC CX
	CMP CX,15
	JNZ X21
	DEC CX
	JMP X21

X25:	CMP CX,14
	JZ X26
	CALL ALARM

X26:	LEA DI,ALARM_TEMP
	MOV CX,14
	CLD
REPE	CMPSB
	CMP CX,0
	JZ X27
	CALL ALARM

X27:	MOV AL,00000000B		;Alarm off
	OUT PORTB,AL

POP DX 		; RESTORE CALLING PROGRAM REGISTERS
POP CX
POP BX
POPF
RET
ALARM	ENDP


USER PROC NEAR				;PROCEDURE FOR USER MODE
PUSHF
PUSH BX
PUSH CX
PUSH DX
CALL CLS

	MOV AL,00000001B
	OUT PORTB,AL
	CALL DELAY_20MS
	MOV CX,0
	MOV DX,0
	LEA SI,USER_PASSWORD
	LEA DI,USER_TEMP

X34:	INC DX

X28:	CALL KEYPAD
	CMP AL,7DH			;CHECKING FOR 'C' KEY
	JZ X29
	JMP X30

X29:	CMP CX,0
	JZ X28
	DEC DI
	CALL BACKSPACE
	DEC CX
	JMP X28
	
X30:	CMP AL,7BH			;CHECKING FOR 'AC' KEY
	JNZ X31
	LEA DI,USER_TEMP
	CALL CLS
	MOV CX,0
	JMP X28

X31:	CMP AL,7EH
	JZ X28
	CMP AL,0B7H
	JZ X28
	CMP AL,0BBH
	JZ X28
	CMP AL,77H			;IF 'ENTER' IS PRESSED
	JZ X32
	MOV [DI],AL
	CALL ASTWRIT
	INC DI
	INC CX
	CMP CX,13
	JNZ X28
	DEC CX
	JMP X28

X32:	CMP CX,12
	JZ X33
	CMP DX,2
	JNZ X34
	CALL ALARM
	JMP L3

X33:	LEA DI,ALARM_TEMP
	MOV CX,12
	CLD
REPE	CMPSB
	CMP CX,0
	JZ X35
	CMP DX,2
	JNZ X34
	CALL ALARM
	JMP L3

X35:	MOV AL,00000000B
	OUT PORTB,AL
	CALL DOOR

L3:
POP DX        ; RESTORE CALLING PROGRAM REGISTERS
POP CX
POP BX
POPF
RET
USER	ENDP


LCD_INIT PROC NEAR
	MOV AL, 38H 		;initialize LCD for 2 lines & 5*7 matrix
	CALL COMNDWRT 		;write the command to LCD
	CALL DELAY_20MS		;wait before issuing the next command
	CALL DELAY_20MS 		;this command needs lots of delay
	CALL DELAY_20MS
	MOV AL, 0EH 		;send command for LCD on, cursor on	
	CALL COMNDWRT
	CALL DELAY_20MS
	MOV AL, 01  		;clear LCD
	CALL COMNDWRT	
	CALL DELAY_20MS
	MOV AL, 06  	;command for shifting cursor right
	CALL COMNDWRT
	CALL DELAY_20MS
	RET
LCD_INIT ENDP


ASTWRIT PROC				;WRITES ASTERICK WHILE TYPING PASSWORD
	PUSH DX  ;save DX
	PUSH AX
	MOV DX,PORTA2  ;DX=port A address
	MOV AL,'*'
	OUT DX, AL ;issue the char to LCD
	MOV AL, 00000101B ;RS=1, R/W=0, E=1 for H-to-L pulse
	MOV DX, PORTB2 ;port B address
	OUT DX, AL  ;make enable high
	MOV AL, 00000001B ;RS=1,R/W=0 and E=0 for H-to-L pulse
	OUT DX, AL
	POP AX
	POP DX
	CALL DELAY_20MS ;wait before issuing the next character
	CALL DELAY_20MS ;wait before issuing the next character
	RET
ASTWRIT ENDP ;writing on the lcd ends 




CLS PROC 
	PUSH AX
	MOV AL, 01  ;clear LCD
	CALL COMNDWRT
	CALL DELAY_20MS
	CALL DELAY_20MS
	POP AX
	RET
CLS ENDP


BACKSPACE PROC NEAR
	PUSH AX
	MOV AL,10H   ; SHIFT CURSOR TO LEFT
	CALL COMNDWRT
	CALL DELAY_20MS
	CALL DELAY_20MS
	MOV AL,' ' ; PRINT SPACE
	CALL COMNDWRT
	CALL DELAY_20MS
	CALL DELAY_20MS
	MOV AL,14H
	CALL COMNDWRT
	CALL DELAY_20MS
	CALL DELAY_20MS
	POP AX
	RET
BACKSPACE ENDP

COMNDWRT PROC ;this procedure writes commands to LCD
	MOV DX, PORTA2
	OUT DX, AL  ;send the code to Port A
	MOV DX, PORTB2	
	MOV AL, 00000100B ;RS=0,R/W=0,E=1 for H-To-L pulse
	OUT DX, AL
	NOP
	NOP	
	MOV AL, 00000000B ;RS=0,R/W=0,E=0 for H-To-L pulse
	OUT DX, AL
	RET
COMNDWRT ENDP
END